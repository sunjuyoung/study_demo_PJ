

spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/jwtoauth
    username: root
    password: ENC(DXtztdUWm+JvwXeMRBojJFENC7yirKfw)

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true


  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ENC(UGt6S6JQ8/jx6PqsI6jXm5w6OMsv+4NpNBH6LghIUpdR02851ASK/Kh4P50ymxFR8AZ41LoIt0Gg6dKw1GyFBd5msRXd/voulMr5jWUrXkpMeD3nF+V4hQ==)
            client_secret: ENC(3EYwhlKGsGrHzJ/XSfHEfd8b6E2+R3ShUniXhyCcIa8CXRYmxtPUUFTNf2N2Cm3G)
            scope:
            - email
            - profile


          naver:
            client-id: ENC(fBCUeoPP7AkQGWV2fVvf7g+w12aypfBmzwqnV+ycnHE=)
            client-secret: ENC(IkYZqk6VW30wJ2GjCMTXSlsL05SWWdQl)
            scope:
            - name
            - email
            - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.




logging:
  level:
    com.example.security: debug


## 프로퍼티 암호화 설정
jasypt:
  encryptor:
    bean: jasyptStringEncryptor